Обработка запросов браузера
===========================

Все запросы от браузера (за некоторым исключением) перехватываются файлом ``index.php``, при этом создаётся экземпляр основного класса приложения — `Eresus_CMS <../../api/Eresus/Eresus_CMS.html>`_. Этот класс выполняет инициализацию ядра CMS, а также запускает соответствующий запросу интерфейс --- клиентский или административный. Последовательность действий выглядит примерно так:

Инициализация ядра
------------------
#. Установка внутренней кодировку функций mb_* в UTF-8 вызовом ``mb_internal_encoding()``.
#. Включение автозагрузчика классов CMS.
#. Включение перехвата ошибок и превращения их в исключения
#. Создание экземпляра `Eresus_CMS <../../api/Eresus/Eresus_CMS.html>`_ и вызов метода ``main()``.

Инициализация CMS
-----------------

#. Проверка и подготовка окружения (наличие настроечных файлов, создание недостающих папок логов и кэша).
#. Чтение конфигурационных файлов.
#. Запуск механизма сессий.
#. Чтение и предварительная обработка запроса HTTP (заполняется массив `Eresus::$request <../../api/Eresus/Eresus.html#$request>`_).
#. Инициализация локали, подключение языкового файла.
#. Подключение к с СУБД.
#. Инициализация механизма расширений.
#. Проверка сессии на истечение времени жизни.
#. Проверка запроса на авторизацию и выход.
#. Аутентификация по куки, если он есть.
#. Настройка шаблонизатора.

Далее, в зависимости от запроса, проводится инициализация клиентского или административного интерфейса.

Клиентский интерфейс
--------------------

#. Создание экземпляра `TClientUI <../../api/Eresus/TClientUI.html>`_
#. Событие ``clientOnStart``
#. Поиск запро запрошенного раздела сайта. Для него и каждого его родителя генерируется событие ``clientOnURLSplit``
#. Выбор шаблона страницы
#. Вызыв метода ``clientRenderContent`` для получения от модуля расширения контента страницы
#. Событие ``clientOnContentRender``
#. Подстановка контента страницы в шаблон
#. Событие ``clientOnPageRender``
#. Производятся подстановки в секцию ``<head>`` страницы (стили, скрипты, ...)
#. Отправка заголовков HTTP
#. Событие ``clientBeforeSend``
#. Отправка созданной страницы барузеру

Административный интерфейса
---------------------------
