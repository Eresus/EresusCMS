<?xml version="1.0" encoding="UTF-8"?>

<project name="eresus-cms" default="build" basedir="./">

    <property file="build.properties" />

    <!-- Основные файлы проекта. Только PHP -->
    <fileset dir="src/main" id="files.sources.php">
        <include name="**/*.php" />
    </fileset>

    <!-- 3rd party: EditArea -->
    <fileset dir="3rdparty/edit_area" id="files.3rd.editarea">
        <include name="**" />
    </fileset>

    <!-- 3rd party: Tiny MCE -->
    <fileset dir="3rdparty/tiny_mce" id="files.3rd.tiny_mce">
        <include name="**" />
    </fileset>

    <!-- SDK files -->
    <fileset dir="." id="files.sdk">
        <include name="SDK/**" />
    </fileset>

    <!--
    =====================================================================
    Загружает файлы сторонних компонентов
    =====================================================================
    -->
    <target name="vendor" description="Fetch 3rd party components">

        <property environment="env" />

        <if>
            <available file="composer" property="." filepath="${env.PATH}" />
            <then>
                <exec command="composer update" dir="src/main" passthru="true" />
            </then>

            <else>

                <if>
                    <available file="src/main/composer.phar" property="." />

                    <then>
                        <exec command="php composer.phar update" dir="src/main" passthru="true" />
                    </then>

                    <else>
                        <echo message="download" />
                        <httpget url="http://getcomposer.org/installer" dir="${project.basedir}"
                                 filename="src/main/composer.php"/>
                        <exec command="php composer.php" dir="src/main" passthru="true" />
                        <delete file="src/main/composer.php" />
                        <exec command="php composer.phar install" dir="src/main" passthru="true" />
                    </else>
                </if>
            </else>
        </if>

        <exec command="tools/jquery-ui.downloader.php" passthru="true" />

    </target>

    <!--
    =====================================================================
    Модульные тесты
    =====================================================================
    -->
    <target name="tests" description="Run unit tests">

        <phplint>
            <fileset refid="files.sources.php" />
        </phplint>

        <mkdir dir="${logs.dir}" />
        <exec
            command="phpunit
                --log-junit ${logs.dir}/phpunit.xml
                --coverage-clover ${logs.dir}/phpunit.coverage.xml
                --coverage-html ${phpunit.coverage.html}
                --configuration ${project.basedir}/tests/phpunit/phpunit.xml"
            checkreturn="true"
            logoutput="true"
        />

    </target>

    <!--
    =====================================================================
    Поиск плохого кода
    =====================================================================
    -->
    <target name="mess" description="Mess detection">

        <mkdir dir="${logs.dir}" />

        <phpmd rulesets="${phpmd.rulesets}">
            <formatter
                type="${phpmd.format}"
                outfile="${logs.dir}/phpmd.${phpmd.format}"
            />
            <fileset refid="files.sources.php" />
        </phpmd>

    </target>

    <!--
    =====================================================================
    Проверка соблюдения стандартов кодирования
    =====================================================================
    -->
    <target name="checkstyle" description="Check for coding standards">
    
        <mkdir dir="${logs.dir}" />

        <if>
            <equals arg1="${phpcs.format}" arg2="checkstyle" />
            <then>
                <property name="phpcs.file.extension" value="xml" />
            </then>
            <else>
                <property name="phpcs.file.extension" value="${phpcs.format}" />
            </else>
        </if>

        <phpcodesniffer
            encoding="UTF-8"
            standard="PSR2DS"
            haltonerror="false"
        >
            <formatter
                type="${phpcs.format}"
                outfile="${logs.dir}/phpcs.${phpcs.file.extension}"
            />
            <fileset dir="src/main">
                <include name="**/*.php" />
                <exclude name="vendor/**" />
            </fileset>
            <fileset dir="tests">
                <include name="phpunit/**.php" />
            </fileset>
        </phpcodesniffer>

    </target>

    <!--
    =====================================================================
    Сборка проекта
    =====================================================================
    -->
    <target name="build" description="Build project">

        <!--
            Делаем путь к папке сборки абсолютным
        -->
        <php function="preg_replace" returnProperty="build.dir">
            <param value="/^\./" />
            <param value="${project.basedir}" />
            <param value="${build.dir}" />
        </php>

        <!-- Копирование основных файлов -->
        <copy todir="${build.dir}">
            <fileset dir="src/main">
                <include name="**" />
                <exclude name="**/Tests/**" />
                <exclude name="**/tests/**" />
                <exclude name="**/test/**" />
                <exclude name=".git" />
                <exclude name="**/*.dist" />
                <exclude name="**/.travis.yml" />
                <exclude name="**/build.xml" />
                <exclude name="**/build.properties" />
                <exclude name="**/*.md" />
                <exclude name="**/UPGRADE*" />
                <exclude name="**/README*" />
                <!-- Composer -->
                <exclude name="**/installed.json" />
                <!-- Twig -->
                <exclude name="**/twig/doc/**" />
                <exclude name="**/twig/package.*" />
            </fileset>
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <!-- Сборка темы default -->
        <exec
            command="make BUILD_DIR=${build.dir}/Eresus/CmsBundle/Resources/public/themes/default"
            dir="src/themes/default" passthru="true" />

        <!-- jQuery.Cookie -->
        <copy file="${build.dir}/vendor/carhartl/jquery-cookie/jquery.cookie.js"
            todir="${build.dir}/web/libs/jquery" />

        <!-- Webshims -->
        <copy todir="${build.dir}/web/bundles/webshim">
            <fileset dir="3rdparty/webshim">
                <include name="**" />
            </fileset>
        </copy>

        <!-- Tiny MCE - ->
        <copy todir="${build.dir}/ext-3rd/tinymce">
            <fileset refid="files.3rd.tiny_mce" />
        </copy>

        <!- - EditArea - ->
        <copy todir="${build.dir}/ext-3rd/editarea">
            <fileset refid="files.3rd.editarea" />
        </copy> -->

        <!-- Прочие файлы -->
        <mkdir dir="${build.dir}/distrib" />
        <copy todir="${build.dir}/distrib">
            <fileset refid="files.sdk" />
            <filterchain>
                <expandproperties />
          </filterchain>
        </copy>
        <copy file="LICENSE" todir="${build.dir}/Eresus/CmsBundle/Resources/meta"
            overwrite="true" />

        <!--
            Удаляем файлы *.orig (остаются от применения патчей под FreeBSD)
        -->
        <delete>
            <fileset dir="${build.dir}">
                <include name="**/*.orig" />
            </fileset>
        </delete>

    </target>

    <!--
    =====================================================================
        Создание документации
    =====================================================================
  -->
  <target name="docs" description="Generate documentation">

      <delete dir="${docs.dir}" includeemptydirs="true" failonerror="false" />

      <delete dir="build.tmp" includeemptydirs="true" failonerror="false" />
      <copy todir="build.tmp/source">
          <fileset dir="docs">
              <include name="**/*" />
          </fileset>
          <filterchain>
              <expandproperties />
          </filterchain>
      </copy>

      <echo message="Building HTML docs..." />
      <exec command="sphinx-build -b html -d build.tmp/cache build.tmp/source ${docs.dir}"
            passthru="true" />

      <if>
          <istrue value="${docs.pdf}" />
          <then>

              <echo message="Building PDF docs..." />
              <exec command="sphinx-build -b latex -d build.tmp/cache build.tmp/source build.tmp/latex"
                    passthru="true" />
              <exec dir="build.tmp/latex"
                    command="gmake all-pdf gmake all-pdf LATEXOPTS='-interaction=nonstopmode'" />
              <copy todir="${docs.dir}">
                  <fileset dir="build.tmp/latex">
                      <include name="*.pdf" />
                  </fileset>
              </copy>

          </then>
      </if>

      <delete dir="build.tmp" includeemptydirs="true" failonerror="true" />
      <mkdir dir="${docs.dir}/api" />
      <phpdoc2
          title="Eresus ${product.version} API"
          destdir="${docs.dir}/api"
          template="${docs.api.template}">
          <fileset dir=".">
              <include name="src/Eresus/**/*.php" />
          </fileset>
      </phpdoc2>

    </target>

    <!--
    =====================================================================
    Очистка сборки от всех созданных файлов
    =====================================================================
    -->

    <target name="clean" description="Clean up build">

        <delete dir="${distr.dir}" includeemptydirs="true" />
        <delete dir="${build.dir}" includeemptydirs="true" />
        <delete dir="${docs.dir}" includeemptydirs="true" />
        <delete dir="${logs.dir}" includeemptydirs="true" />
        <delete dir="${phpunit.coverage.html}" includeemptydirs="true" />
        <delete file="src/main/composer.lock" />
        <delete dir="src/main/vendor" includeemptydirs="true" />
        <delete dir="src/main/web/components" includeemptydirs="true" />

    </target>

</project>
